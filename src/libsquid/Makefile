#############################################################################
# Makefile for building: libsquid.so.1.0.10
# Generated by qmake (2.01a) (Qt 4.7.4) on: Thu Mar 1 09:48:35 2012
# Project:  libsquid.pro
# Template: lib
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile libsquid.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -O3 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -m32 -pipe -O3 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I../utility -I.
LINK          = g++
LFLAGS        = -m32 -Wl,-O1 -shared -Wl,-soname,libsquid.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib -ldc1394 -lraw1394 -lboost_filesystem -lglog -ltiff -ldbus-1 -lQtGui -L/usr/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../utility/myexception.cpp \
		../utility/myutility.cpp \
		../utility/fdtimer.cpp \
		../utility/highresolutiontime.cpp \
		../utility/rt.cpp \
		cameramanager.cpp \
		dc1394camera.cpp \
		dc1394utility.cpp \
		experiment.cpp \
		fpsevaluator.cpp \
		aoi.cpp \
		cameraconfiguration.cpp \
		experimenttime.cpp \
		dc1394frame.cpp \
		dc1394framewriter.cpp \
		fdtriggermanager.cpp moc_cameramanager.cpp \
		moc_dc1394camera.cpp \
		moc_experiment.cpp \
		moc_fpsevaluator.cpp \
		moc_dc1394framewriter.cpp \
		moc_fdtriggermanager.cpp
OBJECTS       = myexception.o \
		myutility.o \
		fdtimer.o \
		highresolutiontime.o \
		rt.o \
		cameramanager.o \
		dc1394camera.o \
		dc1394utility.o \
		experiment.o \
		fpsevaluator.o \
		aoi.o \
		cameraconfiguration.o \
		experimenttime.o \
		dc1394frame.o \
		dc1394framewriter.o \
		fdtriggermanager.o \
		moc_cameramanager.o \
		moc_dc1394camera.o \
		moc_experiment.o \
		moc_fpsevaluator.o \
		moc_dc1394framewriter.o \
		moc_fdtriggermanager.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../utility/utility.pri \
		libsquid.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		libsquid.pro
QMAKE_TARGET  = squid
DESTDIR       = 
TARGET        = libsquid.so.1.0.10
TARGETA       = libsquid.a
TARGETD       = libsquid.so.1.0.10
TARGET0       = libsquid.so
TARGET1       = libsquid.so.1
TARGET2       = libsquid.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: libsquid.pro  /usr/share/qt4/mkspecs/linux-g++-32/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../utility/utility.pri \
		libsquid.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile libsquid.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../utility/utility.pri:
libsquid.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile libsquid.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/squid1.0.10 || $(MKDIR) .tmp/squid1.0.10 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/squid1.0.10/ && $(COPY_FILE) --parents ../utility/myexception.h ../utility/myutility.h ../utility/fdtimer.h ../utility/highresolutiontime.h ../utility/rt.h cameramanager.h dc1394camera.h dc1394utility.h experiment.h fpsevaluator.h aoi.h cameraconfiguration.h experimenttime.h dc1394frame.h dc1394framewriter.h fdtriggermanager.h .tmp/squid1.0.10/ && $(COPY_FILE) --parents ../utility/myexception.cpp ../utility/myutility.cpp ../utility/fdtimer.cpp ../utility/highresolutiontime.cpp ../utility/rt.cpp cameramanager.cpp dc1394camera.cpp dc1394utility.cpp experiment.cpp fpsevaluator.cpp aoi.cpp cameraconfiguration.cpp experimenttime.cpp dc1394frame.cpp dc1394framewriter.cpp fdtriggermanager.cpp .tmp/squid1.0.10/ && (cd `dirname .tmp/squid1.0.10` && $(TAR) squid1.0.10.tar squid1.0.10 && $(COMPRESS) squid1.0.10.tar) && $(MOVE) `dirname .tmp/squid1.0.10`/squid1.0.10.tar.gz . && $(DEL_FILE) -r .tmp/squid1.0.10


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cameramanager.cpp moc_dc1394camera.cpp moc_experiment.cpp moc_fpsevaluator.cpp moc_dc1394framewriter.cpp moc_fdtriggermanager.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cameramanager.cpp moc_dc1394camera.cpp moc_experiment.cpp moc_fpsevaluator.cpp moc_dc1394framewriter.cpp moc_fdtriggermanager.cpp
moc_cameramanager.cpp: dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		fdtriggermanager.h \
		../utility/highresolutiontime.h \
		cameramanager.h
	/usr/bin/moc $(DEFINES) $(INCPATH) cameramanager.h -o moc_cameramanager.cpp

moc_dc1394camera.cpp: dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		dc1394camera.h
	/usr/bin/moc $(DEFINES) $(INCPATH) dc1394camera.h -o moc_dc1394camera.cpp

moc_experiment.cpp: dc1394utility.h \
		../utility/myexception.h \
		dc1394framewriter.h \
		experiment.h
	/usr/bin/moc $(DEFINES) $(INCPATH) experiment.h -o moc_experiment.cpp

moc_fpsevaluator.cpp: fpsevaluator.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fpsevaluator.h -o moc_fpsevaluator.cpp

moc_dc1394framewriter.cpp: ../utility/myexception.h \
		dc1394framewriter.h
	/usr/bin/moc $(DEFINES) $(INCPATH) dc1394framewriter.h -o moc_dc1394framewriter.cpp

moc_fdtriggermanager.cpp: ../utility/myexception.h \
		fdtriggermanager.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fdtriggermanager.h -o moc_fdtriggermanager.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

myexception.o: ../utility/myexception.cpp ../utility/myexception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myexception.o ../utility/myexception.cpp

myutility.o: ../utility/myutility.cpp ../utility/myutility.h \
		../utility/myexception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myutility.o ../utility/myutility.cpp

fdtimer.o: ../utility/fdtimer.cpp ../utility/fdtimer.h \
		../utility/myexception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fdtimer.o ../utility/fdtimer.cpp

highresolutiontime.o: ../utility/highresolutiontime.cpp ../utility/highresolutiontime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o highresolutiontime.o ../utility/highresolutiontime.cpp

rt.o: ../utility/rt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rt.o ../utility/rt.cpp

cameramanager.o: cameramanager.cpp cameramanager.h \
		dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		fdtriggermanager.h \
		../utility/highresolutiontime.h \
		experimenttime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cameramanager.o cameramanager.cpp

dc1394camera.o: dc1394camera.cpp dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		dc1394utility.h \
		cameramanager.h \
		fdtriggermanager.h \
		../utility/highresolutiontime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dc1394camera.o dc1394camera.cpp

dc1394utility.o: dc1394utility.cpp dc1394utility.h \
		../utility/myexception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dc1394utility.o dc1394utility.cpp

experiment.o: experiment.cpp experiment.h \
		dc1394utility.h \
		../utility/myexception.h \
		dc1394framewriter.h \
		experimenttime.h \
		../utility/highresolutiontime.h \
		../utility/myutility.h \
		cameramanager.h \
		dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		fpsevaluator.h \
		fdtriggermanager.h \
		../utility/fdtimer.h \
		../utility/rt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o experiment.o experiment.cpp

fpsevaluator.o: fpsevaluator.cpp cameramanager.h \
		dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		fdtriggermanager.h \
		../utility/highresolutiontime.h \
		../utility/fdtimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fpsevaluator.o fpsevaluator.cpp

aoi.o: aoi.cpp aoi.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aoi.o aoi.cpp

cameraconfiguration.o: cameraconfiguration.cpp cameraconfiguration.h \
		dc1394camera.h \
		dc1394frame.h \
		aoi.h \
		../utility/myexception.h \
		fpsevaluator.h \
		cameramanager.h \
		fdtriggermanager.h \
		../utility/highresolutiontime.h \
		dc1394utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cameraconfiguration.o cameraconfiguration.cpp

experimenttime.o: experimenttime.cpp experimenttime.h \
		../utility/highresolutiontime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o experimenttime.o experimenttime.cpp

dc1394frame.o: dc1394frame.cpp dc1394frame.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dc1394frame.o dc1394frame.cpp

dc1394framewriter.o: dc1394framewriter.cpp dc1394framewriter.h \
		../utility/myexception.h \
		dc1394utility.h \
		../utility/fdtimer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dc1394framewriter.o dc1394framewriter.cpp

fdtriggermanager.o: fdtriggermanager.cpp fdtriggermanager.h \
		../utility/myexception.h \
		../utility/fdtimer.h \
		../utility/rt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fdtriggermanager.o fdtriggermanager.cpp

moc_cameramanager.o: moc_cameramanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cameramanager.o moc_cameramanager.cpp

moc_dc1394camera.o: moc_dc1394camera.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dc1394camera.o moc_dc1394camera.cpp

moc_experiment.o: moc_experiment.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_experiment.o moc_experiment.cpp

moc_fpsevaluator.o: moc_fpsevaluator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fpsevaluator.o moc_fpsevaluator.cpp

moc_dc1394framewriter.o: moc_dc1394framewriter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dc1394framewriter.o moc_dc1394framewriter.cpp

moc_fdtriggermanager.o: moc_fdtriggermanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fdtriggermanager.o moc_fdtriggermanager.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

